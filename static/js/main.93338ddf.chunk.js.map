{"version":3,"sources":["constants/constants.js","component/uploadImage.js","component/postItem.js","post.js","setPost.js","App.js","serviceWorker.js","index.js","firebaseConfig.js"],"names":["CONTENT","beforeUpload","file","isJpgOrPng","type","message","error","UploadImage","state","loading","imageUrl","handleUpload","onError","onSuccess","setState","firebase","storage","ref","name","put","on","snapshot","console","log","child","getDownloadURL","then","url","props","onSetURL","uploadButton","this","LoadingOutlined","PlusOutlined","className","listType","showUploadList","customRequest","src","alt","style","width","React","Component","TextArea","Input","RenderContent","useState","item","content","setContent","onChangeContent","text","placeholder","allowClear","value","onChange","e","target","Title","inside","title","setTitle","index","marginLeft","onClick","onDelete","onAddItem","length","map","key","PostItem","postItem","postTitle","setPostTitle","coverURL","setCoverURL","description","setDescription","sections","setSections","useEffect","cover","addItem","splice","deleteSection","today","Date","database","postIndex","set","modifiedAt","savePost","Card","Meta","Post","post","setPost","val","SetPost","antIcon","fontSize","spin","setPostIndex","data","setData","setLoading","indicator","size","to","onLeadToPost","flex","window","innerWidth","height","deletePost","App","setIndex","exact","path","Boolean","location","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.93338ddf.chunk.js","sourcesContent":["export const CONTENT = {\r\n  IMAGE: \"IMAGE\",\r\n  CONTENT: \"CONTENT\",\r\n  QUOTE: \"QUOTE\",\r\n  YTB: \"YTB\"\r\n};\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport { Upload, message } from \"antd\";\r\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener(\"load\", () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n  if (!isJpgOrPng) {\r\n    message.error(\"You can only upload JPG/PNG file!\");\r\n  }\r\n  return isJpgOrPng;\r\n}\r\n\r\nexport default class UploadImage extends React.Component {\r\n  state = {\r\n    loading: false,\r\n    imageUrl: \"\"\r\n  };\r\n\r\n  handleUpload = ({ onError, onSuccess, file }) => {\r\n    this.setState({ loading: true });\r\n    const uploadTask = firebase\r\n      .storage()\r\n      .ref(`postImages/${file.name}`)\r\n      .put(file);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      snapshot => {},\r\n      error => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        firebase\r\n          .storage()\r\n          .ref(\"postImages\")\r\n          .child(file.name)\r\n          .getDownloadURL()\r\n          .then(url => {\r\n            this.props.onSetURL(url);\r\n            this.setState({ imageUrl: url, loading: false });\r\n          });\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const uploadButton = (\r\n      <div>\r\n        {this.state.loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    const { imageUrl } = this.state;\r\n    return (\r\n      <Upload\r\n        name=\"avatar\"\r\n        listType=\"picture-card\"\r\n        className=\"avatar-uploader\"\r\n        showUploadList={false}\r\n        beforeUpload={beforeUpload}\r\n        customRequest={this.handleUpload}\r\n      >\r\n        {imageUrl ? (\r\n          <img src={imageUrl} alt=\"lỗi\" style={{ width: \"100%\" }} />\r\n        ) : (\r\n          uploadButton\r\n        )}\r\n      </Upload>\r\n    );\r\n  }\r\n}\r\n","import { Button, Input } from \"antd\";\r\nimport firebase from \"firebase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"../App.css\";\r\nimport { CONTENT } from \"../constants/constants\";\r\nimport UploadImage from \"./uploadImage\";\r\nconst { TextArea } = Input;\r\n\r\nfunction RenderContent(props) {\r\n  const [content, setContent] = useState(props.item.content);\r\n\r\n  const onChangeContent = text => {\r\n    setContent(text);\r\n    props.item.content = text;\r\n  };\r\n\r\n  switch (props.item.type) {\r\n    case CONTENT.CONTENT:\r\n      return (\r\n        <TextArea\r\n          placeholder=\"Nội dung\"\r\n          allowClear\r\n          value={content}\r\n          onChange={e => onChangeContent(e.target.value)}\r\n        />\r\n      );\r\n    case CONTENT.QUOTE:\r\n      return (\r\n        <TextArea\r\n          placeholder=\"Quote\"\r\n          allowClear\r\n          value={content}\r\n          onChange={e => onChangeContent(e.target.value)}\r\n        />\r\n      );\r\n    case CONTENT.YTB:\r\n      return (\r\n        <Input\r\n          placeholder=\"Link youtube\"\r\n          allowClear\r\n          value={content}\r\n          onChange={e => onChangeContent(e.target.value)}\r\n        />\r\n      );\r\n    case CONTENT.IMAGE:\r\n      return (\r\n        <UploadImage url={props.item.content} onSetURL={onChangeContent} />\r\n      );\r\n    default:\r\n      return <div />;\r\n  }\r\n}\r\n\r\nfunction Title(props) {\r\n  const { inside } = props.item;\r\n  const [title, setTitle] = useState(props.item.title);\r\n\r\n  const onChangeTitle = text => {\r\n    setTitle(text);\r\n    props.item.title = text;\r\n  };\r\n\r\n  return (\r\n    <div className=\"titleWrap\">\r\n      <div className=\"delWrap\">\r\n        <h3>Mục {props.index}</h3>\r\n        <Button\r\n          type=\"danger\"\r\n          style={{ marginLeft: 16 }}\r\n          onClick={props.onDelete}\r\n        >\r\n          Xóa mục\r\n        </Button>\r\n      </div>\r\n      <br />\r\n      <div className=\"btnWrap\">\r\n        <Button\r\n          className=\"btnStyle\"\r\n          type=\"primary\"\r\n          onClick={() => props.onAddItem(CONTENT.CONTENT, props.index - 1)}\r\n        >\r\n          Thêm nội dung\r\n        </Button>\r\n        <Button\r\n          className=\"btnStyle\"\r\n          type=\"primary\"\r\n          onClick={() => props.onAddItem(CONTENT.QUOTE, props.index - 1)}\r\n        >\r\n          Thêm quote\r\n        </Button>\r\n        <Button\r\n          className=\"btnStyle\"\r\n          type=\"primary\"\r\n          onClick={() => props.onAddItem(CONTENT.IMAGE, props.index - 1)}\r\n        >\r\n          Thêm hình\r\n        </Button>\r\n        <Button\r\n          className=\"btnStyle\"\r\n          type=\"primary\"\r\n          onClick={() => props.onAddItem(CONTENT.YTB, props.index - 1)}\r\n        >\r\n          Thêm video\r\n        </Button>\r\n      </div>\r\n      <br />\r\n      <Input\r\n        placeholder=\"Đề mục (không có bỏ qua, không cần đánh số)\"\r\n        allowClear\r\n        value={title}\r\n        onChange={e => onChangeTitle(e.target.value)}\r\n      />\r\n      <br />\r\n      {inside &&\r\n        inside.length > 0 &&\r\n        inside.map((item, index) => (\r\n          <div key={index}>\r\n            <RenderContent item={item} />\r\n            <br />\r\n            <br />\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PostItem(props) {\r\n  const { postItem } = props;\r\n  const [postTitle, setPostTitle] = useState(\"\");\r\n  const [coverURL, setCoverURL] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [sections, setSections] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setPostTitle(postItem.postTitle);\r\n    setCoverURL(postItem.cover);\r\n    setDescription(postItem.description);\r\n    setSections(postItem.sections || []);\r\n  }, [postItem]);\r\n\r\n  const addSection = () => {\r\n    setSections([\r\n      ...sections,\r\n      {\r\n        title: \"\",\r\n        inside: [{ type: \"CONTENT\", content: \"\" }]\r\n      }\r\n    ]);\r\n  };\r\n\r\n  const deleteSection = index => {\r\n    sections.splice(index, 1);\r\n    setSections([...sections]);\r\n  };\r\n\r\n  const addItem = (type, index) => {\r\n    sections[index].inside = [...sections[index].inside, { type, content: \"\" }];\r\n    setSections([...sections]);\r\n  };\r\n\r\n  const onSetCoverURL = url => {\r\n    setCoverURL(url);\r\n  };\r\n\r\n  const savePost = () => {\r\n    console.log(coverURL);\r\n    const today = new Date();\r\n    firebase\r\n      .database()\r\n      .ref(\"posts\")\r\n      .child(props.postIndex)\r\n      .set({\r\n        postTitle: postTitle || \"\",\r\n        coverURL: coverURL || \"\",\r\n        description: description || \"\",\r\n        sections: sections || [],\r\n        modifiedAt: today\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Input\r\n        placeholder=\"Tiêu đề\"\r\n        allowClear\r\n        value={postTitle}\r\n        onChange={e => setPostTitle(e.target.value)}\r\n      />\r\n      <br />\r\n      <br />\r\n      <UploadImage url={postItem.cover} onSetURL={onSetCoverURL} />\r\n      <br />\r\n      <TextArea\r\n        placeholder=\"Mô tả\"\r\n        allowClear\r\n        value={description}\r\n        onChange={e => setDescription(e.target.value)}\r\n      />\r\n      <br />\r\n      <br />\r\n      <Button type=\"primary\" onClick={addSection}>\r\n        Thêm mục\r\n      </Button>\r\n      <br />\r\n      <br />\r\n      {sections &&\r\n        sections.length > 0 &&\r\n        sections.map((item, index) => (\r\n          <div key={index}>\r\n            <br />\r\n            <Title\r\n              index={index + 1}\r\n              item={item}\r\n              onAddItem={addItem}\r\n              onDelete={() => deleteSection(index)}\r\n            />\r\n          </div>\r\n        ))}\r\n      <Button type=\"primary\" onClick={() => savePost()}>\r\n        Lưu\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostItem;\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Button, Card, Spin } from \"antd\";\r\nimport firebase from \"firebase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport PostItem from \"./component/postItem\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Meta } = Card;\r\n\r\nfunction Post(props) {\r\n  const [post, setPost] = useState({});\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .database()\r\n      .ref(\"posts\")\r\n      .child(props.index)\r\n      .on(\"value\", snapshot => {\r\n        const post = snapshot.val();\r\n        setPost(post);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <img alt=\"Lỗi hình\" src={post.coverURL} width=\"100%\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Button, Card, Spin } from \"antd\";\r\nimport firebase from \"firebase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport PostItem from \"./component/postItem\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Meta } = Card;\r\n\r\nfunction SetPost(props) {\r\n  const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n  const [postIndex, setPostIndex] = useState(0);\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .database()\r\n      .ref(\"posts\")\r\n      .on(\"value\", snapshot => {\r\n        const post = snapshot.val();\r\n        if (post && post.length > 0) setData(post);\r\n        else setData([{ title: \"\", cover: \"\", description: \"\", sections: [] }]);\r\n        console.log(post);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const addNewPost = () => {\r\n    setPostIndex(data.length);\r\n    setData([...data, { title: \"\", cover: \"\", description: \"\", sections: [] }]);\r\n  };\r\n\r\n  const deletePost = index => {\r\n    if (data && data.length > 1) {\r\n      data.splice(index, 1);\r\n      setData([...data]);\r\n      setPostIndex(0);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"App\">\r\n        <Spin indicator={antIcon} size=\"large\" />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"leftHalf\">\r\n        {data && data.length > 0 ? (\r\n          data.map((item, index) => (\r\n            <Link\r\n              key={index}\r\n              to={`/${index}`}\r\n              onClick={() => props.onLeadToPost(index)}\r\n            >\r\n              <div key={index} style={{ flex: 1 }}>\r\n                <Card\r\n                  style={{ width: window.innerWidth / 3 }}\r\n                  cover={\r\n                    <img alt=\"Lỗi hình\" src={item.coverURL} height=\"150\" />\r\n                  }\r\n                >\r\n                  <Meta title={item.postTitle} description={item.description} />\r\n                </Card>\r\n                <br />\r\n                <div className=\"btnWrap\">\r\n                  <Button type=\"danger\" onClick={() => deletePost(index)}>\r\n                    Xóa\r\n                  </Button>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    style={{ marginLeft: 16 }}\r\n                    onClick={() => setPostIndex(index)}\r\n                  >\r\n                    Sửa\r\n                  </Button>\r\n                </div>\r\n                <br />\r\n                <br />\r\n              </div>\r\n            </Link>\r\n          ))\r\n        ) : (\r\n          <h3>Chưa có bài viết nào</h3>\r\n        )}\r\n      </div>\r\n      <div className=\"rightHalf\">\r\n        <Button type=\"primary\" onClick={() => addNewPost()}>\r\n          Thêm mới\r\n        </Button>\r\n        <h2>Bài số {postIndex + 1}</h2>\r\n        <PostItem postIndex={postIndex} postItem={data[postIndex]} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SetPost;\r\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Post from \"./post\";\nimport SetPost from \"./setPost\";\n\nfunction App() {\n  const [index, setIndex] = useState(0);\n  return (\n    <Router>\n      <div>\n        <Route exact path=\"/\">\n          <SetPost onLeadToPost={postIndex => setIndex(postIndex)} />\n        </Route>\n        <Route path={`/${index}`}>\n          <Post index={index} />\n        </Route>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { firebaseConfig } from \"./firebaseConfig\";\nimport firebase from \"firebase\";\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const firebaseConfig = {\r\n  apiKey: \"AIzaSyCIbYZAKvEmY9ns42xafyV54BFU6qUCmKI\",\r\n  authDomain: \"dau-giau.firebaseapp.com\",\r\n  databaseURL: \"https://dau-giau.firebaseio.com\",\r\n  projectId: \"dau-giau\",\r\n  storageBucket: \"dau-giau.appspot.com\",\r\n  messagingSenderId: \"801715659405\",\r\n  appId: \"1:801715659405:web:cb3eecc4840cd11abaf8c4\",\r\n  measurementId: \"G-XCRXMT5JYZ\"\r\n};\r\n"],"sourceRoot":""}