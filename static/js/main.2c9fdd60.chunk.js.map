{"version":3,"sources":["constants/constants.js","component/uploadImage.js","component/postItem.js","App.js","serviceWorker.js","index.js","firebaseConfig.js"],"names":["CONTENT","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isJpgOrPng","type","message","error","isLt2M","size","UploadImage","state","loading","handleChange","info","status","originFileObj","imageUrl","setState","uploadButton","this","LoadingOutlined","PlusOutlined","className","name","listType","showUploadList","action","onChange","src","alt","style","width","React","Component","TextArea","Input","RenderContent","props","item","placeholder","allowClear","Title","inside","index","marginLeft","onClick","onDelete","onAddItem","length","map","key","PostItem","postItem","console","log","useState","postTitle","setPostTitle","cover","coverURL","description","setDescription","sections","setSections","addItem","content","e","target","value","title","splice","deleteSection","firebase","database","ref","child","postIndex","set","Meta","Card","App","antIcon","fontSize","spin","setPostIndex","data","setData","setLoading","useEffect","on","snapshot","post","val","indicator","height","deletePost","Boolean","window","location","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2c9fdd60.chunk.js","sourcesContent":["export const CONTENT = {\r\n  IMAGE: \"IMAGE\",\r\n  CONTENT: \"CONTENT\",\r\n  QUOTE: \"QUOTE\",\r\n  YTB: \"YTB\"\r\n};\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport { Upload, message } from \"antd\";\r\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener(\"load\", () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n  if (!isJpgOrPng) {\r\n    message.error(\"You can only upload JPG/PNG file!\");\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error(\"Image must smaller than 2MB!\");\r\n  }\r\n  return isJpgOrPng && isLt2M;\r\n}\r\n\r\nexport default class UploadImage extends React.Component {\r\n  state = {\r\n    loading: false\r\n  };\r\n\r\n  handleChange = info => {\r\n    if (info.file.status === \"uploading\") {\r\n      this.setState({ loading: true });\r\n      return;\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, imageUrl =>\r\n        this.setState({\r\n          imageUrl,\r\n          loading: false\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const uploadButton = (\r\n      <div>\r\n        {this.state.loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    const { imageUrl } = this.state;\r\n    return (\r\n      <Upload\r\n        name=\"avatar\"\r\n        listType=\"picture-card\"\r\n        className=\"avatar-uploader\"\r\n        showUploadList={false}\r\n        action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n        beforeUpload={beforeUpload}\r\n        onChange={this.handleChange}\r\n      >\r\n        {imageUrl ? (\r\n          <img src={imageUrl} alt=\"avatar\" style={{ width: \"100%\" }} />\r\n        ) : (\r\n          uploadButton\r\n        )}\r\n      </Upload>\r\n    );\r\n  }\r\n}\r\n","import { Button, Input } from \"antd\";\r\nimport firebase from \"firebase\";\r\nimport React, { useState } from \"react\";\r\nimport \"../App.css\";\r\nimport { CONTENT } from \"../constants/constants\";\r\nimport UploadImage from \"./uploadImage\";\r\nconst { TextArea } = Input;\r\n\r\nfunction RenderContent(props) {\r\n  switch (props.item.type) {\r\n    case CONTENT.CONTENT:\r\n      return <TextArea placeholder=\"Nội dung\" allowClear onChange={() => {}} />;\r\n    case CONTENT.QUOTE:\r\n      return <TextArea placeholder=\"Quote\" allowClear onChange={() => {}} />;\r\n    case CONTENT.YTB:\r\n      return (\r\n        <Input placeholder=\"Link youtube\" allowClear onChange={() => {}} />\r\n      );\r\n    case CONTENT.IMAGE:\r\n      return <UploadImage />;\r\n    default:\r\n      return <div />;\r\n  }\r\n}\r\n\r\nfunction Title(props) {\r\n  const { inside } = props.item;\r\n  return (\r\n    <div className=\"titleWrap\">\r\n      <div className=\"delWrap\">\r\n        <h3>Mục {props.index}</h3>\r\n        <Button\r\n          type=\"danger\"\r\n          style={{ marginLeft: 16 }}\r\n          onClick={props.onDelete}\r\n        >\r\n          Xóa mục\r\n        </Button>\r\n      </div>\r\n      <br />\r\n      <div className=\"btnWrap\">\r\n        <Button\r\n          className=\"btnStyle\"\r\n          type=\"primary\"\r\n          onClick={() => props.onAddItem(CONTENT.CONTENT, props.index - 1)}\r\n        >\r\n          Thêm nội dung\r\n        </Button>\r\n        <Button\r\n          className=\"btnStyle\"\r\n          type=\"primary\"\r\n          onClick={() => props.onAddItem(CONTENT.QUOTE, props.index - 1)}\r\n        >\r\n          Thêm quote\r\n        </Button>\r\n        <Button\r\n          className=\"btnStyle\"\r\n          type=\"primary\"\r\n          onClick={() => props.onAddItem(CONTENT.IMAGE, props.index - 1)}\r\n        >\r\n          Thêm hình\r\n        </Button>\r\n        <Button\r\n          className=\"btnStyle\"\r\n          type=\"primary\"\r\n          onClick={() => props.onAddItem(CONTENT.YTB, props.index - 1)}\r\n        >\r\n          Thêm video\r\n        </Button>\r\n      </div>\r\n      <br />\r\n      <Input\r\n        placeholder=\"Đề mục (không có bỏ qua, không cần đánh số)\"\r\n        allowClear\r\n        onChange={() => {}}\r\n      />\r\n      <br />\r\n      {inside &&\r\n        inside.length > 0 &&\r\n        inside.map((item, index) => (\r\n          <div key={index}>\r\n            <RenderContent item={item} />\r\n            <br />\r\n            <br />\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PostItem(props) {\r\n  const { postItem } = props;\r\n  console.log(postItem);\r\n  const [postTitle, setPostTitle] = useState(postItem.postTitle);\r\n  const [coverURL, setCoverURL] = useState(postItem.cover);\r\n  const [description, setDescription] = useState(postItem.description);\r\n  const [sections, setSections] = useState(postItem.sections || []);\r\n\r\n  const addSection = () => {\r\n    setSections([\r\n      ...sections,\r\n      {\r\n        title: \"\",\r\n        inside: [{ type: \"CONTENT\", content: \"\" }]\r\n      }\r\n    ]);\r\n  };\r\n\r\n  const deleteSection = index => {\r\n    sections.splice(index, 1);\r\n    setSections([...sections]);\r\n  };\r\n\r\n  const addItem = (type, index) => {\r\n    sections[index].inside = [...sections[index].inside, { type, content: \"\" }];\r\n    setSections([...sections]);\r\n  };\r\n\r\n  const savePost = () => {\r\n    firebase\r\n      .database()\r\n      .ref(\"posts\")\r\n      .child(props.postIndex)\r\n      .set({\r\n        postTitle: postTitle,\r\n        coverURL: coverURL,\r\n        description: description,\r\n        sections: sections\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Input\r\n        placeholder=\"Tiêu đề\"\r\n        allowClear\r\n        onChange={e => setPostTitle(e.target.value)}\r\n      />\r\n      <br />\r\n      <br />\r\n      <UploadImage />\r\n      <br />\r\n      <TextArea\r\n        placeholder=\"Mô tả\"\r\n        allowClear\r\n        onChange={e => setDescription(e.target.value)}\r\n      />\r\n      <br />\r\n      <br />\r\n      <Button type=\"primary\" onClick={addSection}>\r\n        Thêm mục\r\n      </Button>\r\n      <br />\r\n      <br />\r\n      {sections &&\r\n        sections.length > 0 &&\r\n        sections.map((item, index) => (\r\n          <div key={index}>\r\n            <br />\r\n            <Title\r\n              index={index + 1}\r\n              item={item}\r\n              onAddItem={addItem}\r\n              onDelete={() => deleteSection(index)}\r\n            />\r\n          </div>\r\n        ))}\r\n      <Button type=\"primary\" onClick={() => savePost()}>\r\n        Lưu\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostItem;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Card, Button, Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport PostItem from \"./component/postItem\";\nimport firebase from \"firebase\";\nconst { Meta } = Card;\n\nfunction App() {\n  const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n  const [postIndex, setPostIndex] = useState(0);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    firebase\n      .database()\n      .ref(\"posts\")\n      .on(\"value\", snapshot => {\n        const post = snapshot.val();\n        if (post && post.length > 0) setData(post);\n        else setData([{ title: \"\", cover: \"\", description: \"\", sections: [] }]);\n        console.log(post);\n        setLoading(false);\n      });\n  }, []);\n\n  const addNewPost = () => {\n    setPostIndex(data.length);\n    setData([...data, { title: \"\", cover: \"\", description: \"\", sections: [] }]);\n  };\n\n  const deletePost = index => {\n    data.splice(index, 1);\n    setData([...data]);\n    setPostIndex(0);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"App\">\n        <Spin indicator={antIcon} size=\"large\" />\n      </div>\n    );\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"leftHalf\">\n        {data && data.length > 0 ? (\n          data.map((item, index) => (\n            <div key={index}>\n              <Card\n                style={{ width: \"100%\" }}\n                cover={\n                  <img\n                    alt=\"Lỗi hình\"\n                    src={item.cover}\n                    width=\"100%\"\n                    height=\"150\"\n                  />\n                }\n              >\n                <Meta title={item.postTitle} description={item.description} />\n              </Card>\n              <br />\n              <div className=\"btnWrap\">\n                <Button type=\"danger\" onClick={() => deletePost(index)}>\n                  Xóa\n                </Button>\n                <Button\n                  type=\"primary\"\n                  style={{ marginLeft: 16 }}\n                  onClick={() => setPostIndex(index)}\n                >\n                  Sửa\n                </Button>\n              </div>\n              <br />\n              <br />\n            </div>\n          ))\n        ) : (\n          <h3>Chưa có bài viết nào</h3>\n        )}\n      </div>\n      <div className=\"rightHalf\">\n        <Button type=\"primary\" onClick={() => addNewPost()}>\n          Thêm mới\n        </Button>\n        <h2>Bài số {postIndex + 1}</h2>\n        <PostItem postIndex={postIndex} postItem={data[postIndex]} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { firebaseConfig } from \"./firebaseConfig\";\nimport firebase from \"firebase\";\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const firebaseConfig = {\r\n  apiKey: \"AIzaSyCIbYZAKvEmY9ns42xafyV54BFU6qUCmKI\",\r\n  authDomain: \"dau-giau.firebaseapp.com\",\r\n  databaseURL: \"https://dau-giau.firebaseio.com\",\r\n  projectId: \"dau-giau\",\r\n  storageBucket: \"dau-giau.appspot.com\",\r\n  messagingSenderId: \"801715659405\",\r\n  appId: \"1:801715659405:web:cb3eecc4840cd11abaf8c4\",\r\n  measurementId: \"G-XCRXMT5JYZ\"\r\n};\r\n"],"sourceRoot":""}