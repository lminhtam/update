{"version":3,"sources":["constants/constants.js","post.js","component/uploadImage.js","component/postItem.js","setPost.js","App.js","serviceWorker.js","index.js","firebaseConfig.js"],"names":["CONTENT","WINDOW_WIDTH","window","screen","width","Post","props","useState","post","setPost","useEffect","firebase","database","ref","child","index","on","snapshot","val","className","alt","src","coverURL","postTitle","description","sections","map","item","key","title","inside","cont","type","content","height","frameborder","allow","allowFullScreen","renderContent","beforeUpload","file","isJpgOrPng","message","error","UploadImage","state","loading","imageUrl","url","handleUpload","onError","onSuccess","setState","storage","name","put","console","log","getDownloadURL","then","onSetURL","uploadButton","this","LoadingOutlined","PlusOutlined","listType","showUploadList","customRequest","style","React","Component","TextArea","Input","RenderContent","setContent","onChangeContent","text","placeholder","allowClear","value","onChange","e","target","Title","setTitle","marginLeft","onClick","onDelete","onAddItem","length","PostItem","postItem","setPostTitle","setCoverURL","setDescription","setSections","addItem","splice","deleteSection","today","Date","postIndex","set","modifiedAt","savePost","Meta","Card","SetPost","antIcon","fontSize","spin","setPostIndex","data","setData","setLoading","cover","indicator","size","to","onLeadToPost","flex","innerWidth","deletePost","App","setIndex","exact","path","Boolean","location","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f828ad8a.chunk.js","sourcesContent":["export const CONTENT = {\r\n  IMAGE: \"IMAGE\",\r\n  CONTENT: \"CONTENT\",\r\n  QUOTE: \"QUOTE\",\r\n  YTB: \"YTB\"\r\n};\r\n\r\nexport const WINDOW_WIDTH = window.screen.width\r\n","import firebase from \"firebase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { CONTENT, WINDOW_WIDTH } from \"./constants/constants\";\r\n\r\nfunction Post(props) {\r\n  const [post, setPost] = useState({});\r\n\r\n  const renderContent = (item, index) => {\r\n    switch (item.type) {\r\n      case CONTENT.CONTENT:\r\n        return (\r\n          <p key={index} className=\"paragraph\">\r\n            {item.content}\r\n          </p>\r\n        );\r\n      case CONTENT.QUOTE:\r\n        return (\r\n          <div className=\"quoteWrap\">\r\n            <p className=\"quoteNote\">\"</p>\r\n            <p key={index} className=\"quote\">\r\n              {item.content}\r\n            </p>\r\n          </div>\r\n        );\r\n      case CONTENT.YTB:\r\n        return (\r\n          <iframe\r\n            width=\"60%\"\r\n            height={`${(WINDOW_WIDTH * 0.6 * 9) / 16}`}\r\n            src={\r\n              item.content\r\n                ? item.content\r\n                : \"https://www.youtube.com/embed/ZBut_eGa8Y4\"\r\n            }\r\n            frameborder=\"0\"\r\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen\r\n          ></iframe>\r\n        );\r\n      case CONTENT.IMAGE:\r\n        return (\r\n          <img key={index} alt=\"Lỗi hình\" src={item.content} width=\"70%\" />\r\n        );\r\n      default:\r\n        return <div />;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .database()\r\n      .ref(\"posts\")\r\n      .child(props.index)\r\n      .on(\"value\", snapshot => {\r\n        const post = snapshot.val();\r\n        setPost(post);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div className=\"post\">\r\n      <img alt=\"Lỗi hình\" src={post.coverURL} width=\"100%\" />\r\n      <p className=\"postTitle\">{post.postTitle}</p>\r\n      {post.description && <p className=\"description\">{post.description}</p>}\r\n      {post.sections &&\r\n        post.sections.map((item, index) => (\r\n          <div className=\"section\" key={index}>\r\n            {item.title && <p className=\"sectionTitle\">{item.title}</p>}\r\n            {item.inside && item.inside.map(cont => renderContent(cont, index))}\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { message, Upload } from \"antd\";\r\nimport firebase from \"firebase\";\r\nimport React from \"react\";\r\nimport \"../App.css\";\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n  if (!isJpgOrPng) {\r\n    message.error(\"You can only upload JPG/PNG file!\");\r\n  }\r\n  return isJpgOrPng;\r\n}\r\n\r\nexport default class UploadImage extends React.Component {\r\n  state = {\r\n    loading: false,\r\n    imageUrl: this.props.url || \"\"\r\n  };\r\n\r\n  handleUpload = ({ onError, onSuccess, file }) => {\r\n    this.setState({ loading: true });\r\n    const uploadTask = firebase\r\n      .storage()\r\n      .ref(`postImages/${file.name}`)\r\n      .put(file);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      snapshot => {},\r\n      error => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        firebase\r\n          .storage()\r\n          .ref(\"postImages\")\r\n          .child(file.name)\r\n          .getDownloadURL()\r\n          .then(url => {\r\n            this.props.onSetURL(url);\r\n            this.setState({ imageUrl: url, loading: false });\r\n          });\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const uploadButton = (\r\n      <div>\r\n        {this.state.loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    const { imageUrl } = this.state;\r\n    return (\r\n      <Upload\r\n        name=\"avatar\"\r\n        listType=\"picture-card\"\r\n        className=\"avatar-uploader\"\r\n        showUploadList={false}\r\n        beforeUpload={beforeUpload}\r\n        customRequest={this.handleUpload}\r\n      >\r\n        {imageUrl ? (\r\n          <img src={imageUrl} alt=\"lỗi\" style={{ width: \"100%\" }} />\r\n        ) : (\r\n          uploadButton\r\n        )}\r\n      </Upload>\r\n    );\r\n  }\r\n}\r\n","import { Button, Input } from \"antd\";\r\nimport firebase from \"firebase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"../App.css\";\r\nimport { CONTENT } from \"../constants/constants\";\r\nimport UploadImage from \"./uploadImage\";\r\nconst { TextArea } = Input;\r\n\r\nfunction RenderContent(props) {\r\n  const [content, setContent] = useState(props.item.content);\r\n\r\n  const onChangeContent = text => {\r\n    if (text && text !== \"\") {\r\n      setContent(text);\r\n      props.item.content = text;\r\n    }\r\n  };\r\n\r\n  switch (props.item.type) {\r\n    case CONTENT.CONTENT:\r\n      return (\r\n        <TextArea\r\n          placeholder=\"Nội dung\"\r\n          allowClear\r\n          value={content}\r\n          onChange={e => onChangeContent(e.target.value)}\r\n        />\r\n      );\r\n    case CONTENT.QUOTE:\r\n      return (\r\n        <TextArea\r\n          placeholder=\"Quote\"\r\n          allowClear\r\n          value={content}\r\n          onChange={e => onChangeContent(e.target.value)}\r\n        />\r\n      );\r\n    case CONTENT.YTB:\r\n      return (\r\n        <Input\r\n          placeholder=\"Link youtube\"\r\n          allowClear\r\n          value={content}\r\n          onChange={e => onChangeContent(e.target.value)}\r\n        />\r\n      );\r\n    case CONTENT.IMAGE:\r\n      return (\r\n        <UploadImage url={props.item.content} onSetURL={onChangeContent} />\r\n      );\r\n    default:\r\n      return <div />;\r\n  }\r\n}\r\n\r\nfunction Title(props) {\r\n  const { inside } = props.item;\r\n  const [title, setTitle] = useState(props.item.title);\r\n\r\n  const onChangeTitle = text => {\r\n    setTitle(text);\r\n    props.item.title = text;\r\n  };\r\n\r\n  return (\r\n    <div className=\"titleWrap\">\r\n      <div className=\"delWrap\">\r\n        <h3>Mục {props.index}</h3>\r\n        <Button\r\n          type=\"danger\"\r\n          style={{ marginLeft: 16 }}\r\n          onClick={props.onDelete}\r\n        >\r\n          Xóa mục\r\n        </Button>\r\n      </div>\r\n      <br />\r\n      <div className=\"btnWrap\">\r\n        <Button\r\n          className=\"btnStyle\"\r\n          type=\"primary\"\r\n          onClick={() => props.onAddItem(CONTENT.CONTENT, props.index - 1)}\r\n        >\r\n          Thêm nội dung\r\n        </Button>\r\n        <Button\r\n          className=\"btnStyle\"\r\n          type=\"primary\"\r\n          onClick={() => props.onAddItem(CONTENT.QUOTE, props.index - 1)}\r\n        >\r\n          Thêm quote\r\n        </Button>\r\n        <Button\r\n          className=\"btnStyle\"\r\n          type=\"primary\"\r\n          onClick={() => props.onAddItem(CONTENT.IMAGE, props.index - 1)}\r\n        >\r\n          Thêm hình\r\n        </Button>\r\n        <Button\r\n          className=\"btnStyle\"\r\n          type=\"primary\"\r\n          onClick={() => props.onAddItem(CONTENT.YTB, props.index - 1)}\r\n        >\r\n          Thêm video\r\n        </Button>\r\n      </div>\r\n      <br />\r\n      <Input\r\n        placeholder=\"Đề mục (không có bỏ qua, không cần đánh số)\"\r\n        allowClear\r\n        value={title}\r\n        onChange={e => onChangeTitle(e.target.value)}\r\n      />\r\n      <br />\r\n      {inside &&\r\n        inside.length > 0 &&\r\n        inside.map((item, index) => (\r\n          <div key={index}>\r\n            <RenderContent item={item} />\r\n            <br />\r\n            <br />\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PostItem(props) {\r\n  const { postItem } = props;\r\n  const [postTitle, setPostTitle] = useState(\"\");\r\n  const [coverURL, setCoverURL] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [sections, setSections] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setPostTitle(postItem.postTitle);\r\n    setCoverURL(postItem.coverURL);\r\n    setDescription(postItem.description);\r\n    setSections(postItem.sections || []);\r\n  }, [postItem]);\r\n\r\n  const addSection = () => {\r\n    setSections([\r\n      ...sections,\r\n      {\r\n        title: \"\",\r\n        inside: [{ type: \"CONTENT\", content: \"\" }]\r\n      }\r\n    ]);\r\n  };\r\n\r\n  const deleteSection = index => {\r\n    sections.splice(index, 1);\r\n    setSections([...sections]);\r\n  };\r\n\r\n  const addItem = (type, index) => {\r\n    sections[index].inside = [...sections[index].inside, { type, content: \"\" }];\r\n    setSections([...sections]);\r\n  };\r\n\r\n  const onSetCoverURL = url => {\r\n    if (url && url !== \"\") setCoverURL(url);\r\n  };\r\n\r\n  const savePost = () => {\r\n    const today = new Date();\r\n    firebase\r\n      .database()\r\n      .ref(\"posts\")\r\n      .child(props.postIndex)\r\n      .set({\r\n        postTitle: postTitle || \"\",\r\n        coverURL: coverURL || \"\",\r\n        description: description || \"\",\r\n        sections: sections || [],\r\n        modifiedAt: today\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Input\r\n        placeholder=\"Tiêu đề\"\r\n        allowClear\r\n        value={postTitle}\r\n        onChange={e => setPostTitle(e.target.value)}\r\n      />\r\n      <br />\r\n      <br />\r\n      <UploadImage url={postItem.coverURL} onSetURL={onSetCoverURL} />\r\n      <br />\r\n      <TextArea\r\n        placeholder=\"Mô tả\"\r\n        allowClear\r\n        value={description}\r\n        onChange={e => setDescription(e.target.value)}\r\n      />\r\n      <br />\r\n      <br />\r\n      <Button type=\"primary\" onClick={addSection}>\r\n        Thêm mục\r\n      </Button>\r\n      <br />\r\n      <br />\r\n      {sections &&\r\n        sections.length > 0 &&\r\n        sections.map((item, index) => (\r\n          <div key={index}>\r\n            <br />\r\n            <Title\r\n              index={index + 1}\r\n              item={item}\r\n              onAddItem={addItem}\r\n              onDelete={() => deleteSection(index)}\r\n            />\r\n          </div>\r\n        ))}\r\n      <Button type=\"primary\" onClick={() => savePost()}>\r\n        Lưu\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostItem;\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Button, Card, Spin } from \"antd\";\r\nimport firebase from \"firebase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport PostItem from \"./component/postItem\";\r\nconst { Meta } = Card;\r\n\r\nfunction SetPost(props) {\r\n  const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n  const [postIndex, setPostIndex] = useState(0);\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .database()\r\n      .ref(\"posts\")\r\n      .on(\"value\", snapshot => {\r\n        const post = snapshot.val();\r\n        if (post && post.length > 0) setData(post);\r\n        else setData([{ title: \"\", cover: \"\", description: \"\", sections: [] }]);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const addNewPost = () => {\r\n    setPostIndex(data.length);\r\n    setData([...data, { title: \"\", cover: \"\", description: \"\", sections: [] }]);\r\n  };\r\n\r\n  const deletePost = index => {\r\n    if (data && data.length > 1) {\r\n      data.splice(index, 1);\r\n      setData([...data]);\r\n      setPostIndex(0);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"App\">\r\n        <Spin indicator={antIcon} size=\"large\" />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"leftHalf\">\r\n        {data && data.length > 0 ? (\r\n          data.map((item, index) => (\r\n            <Link\r\n              key={index}\r\n              to={`/${index}`}\r\n              onClick={() => props.onLeadToPost(index)}\r\n            >\r\n              <div key={index} style={{ flex: 1 }}>\r\n                <Card\r\n                  style={{ width: window.innerWidth / 3 }}\r\n                  cover={\r\n                    <img alt=\"Lỗi hình\" src={item.coverURL} height=\"150\" />\r\n                  }\r\n                >\r\n                  <Meta title={item.postTitle} description={item.description} />\r\n                </Card>\r\n                <br />\r\n                <div className=\"btnWrap\">\r\n                  <Button type=\"danger\" onClick={() => deletePost(index)}>\r\n                    Xóa\r\n                  </Button>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    style={{ marginLeft: 16 }}\r\n                    onClick={() => setPostIndex(index)}\r\n                  >\r\n                    Sửa\r\n                  </Button>\r\n                </div>\r\n                <br />\r\n                <br />\r\n              </div>\r\n            </Link>\r\n          ))\r\n        ) : (\r\n          <h3>Chưa có bài viết nào</h3>\r\n        )}\r\n      </div>\r\n      <div className=\"rightHalf\">\r\n        <Button type=\"primary\" onClick={() => addNewPost()}>\r\n          Thêm mới\r\n        </Button>\r\n        <h2>Bài số {postIndex + 1}</h2>\r\n        <PostItem postIndex={postIndex} postItem={data[postIndex]} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SetPost;\r\n","import React, { useState } from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Post from \"./post\";\r\nimport SetPost from \"./setPost\";\r\n\r\nfunction App() {\r\n  const [index, setIndex] = useState(0);\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Route exact path=\"/\">\r\n          <SetPost onLeadToPost={postIndex => setIndex(postIndex)} />\r\n        </Route>\r\n        <Route path={`/${index}`}>\r\n          <Post index={index} />\r\n        </Route>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { firebaseConfig } from \"./firebaseConfig\";\r\nimport firebase from \"firebase\";\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const firebaseConfig = {\r\n  apiKey: \"AIzaSyCIbYZAKvEmY9ns42xafyV54BFU6qUCmKI\",\r\n  authDomain: \"dau-giau.firebaseapp.com\",\r\n  databaseURL: \"https://dau-giau.firebaseio.com\",\r\n  projectId: \"dau-giau\",\r\n  storageBucket: \"dau-giau.appspot.com\",\r\n  messagingSenderId: \"801715659405\",\r\n  appId: \"1:801715659405:web:cb3eecc4840cd11abaf8c4\",\r\n  measurementId: \"G-XCRXMT5JYZ\"\r\n};\r\n"],"sourceRoot":""}