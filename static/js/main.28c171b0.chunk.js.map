{"version":3,"sources":["component/pictureWall.js","component/postItem.js","App.js","serviceWorker.js","firebaseConfig.js","index.js"],"names":["getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","PicturesWall","props","useState","previewVisible","setPreviewVisible","previewImage","setPreviewImage","fileList","setFileList","handlePreview","a","url","preview","originFileObj","uploadButton","PlusOutlined","className","action","listType","onPreview","onChange","length","visible","footer","onCancel","alt","style","width","src","TextArea","Input","beforeUpload","isJpgOrPng","type","message","isLt2M","size","Title","index","marginLeft","onClick","onDelete","placeholder","allowClear","PostItem","imageUrl","setImageURL","loading","setLoading","setPostTitle","setDescription","sections","setSections","LoadingOutlined","text","name","showUploadList","info","status","img","callback","addEventListener","title","content","ytbURL","pictureLinks","map","item","key","splice","forEach","console","log","deleteSection","Meta","Card","data","cover","description","App","height","block","Boolean","window","location","hostname","match","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.28c171b0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../App.css\";\r\nimport { Upload, Modal } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\nfunction PicturesWall(props) {\r\n  const [previewVisible, setPreviewVisible] = useState(false);\r\n  const [previewImage, setPreviewImage] = useState(\"\");\r\n  const [fileList, setFileList] = useState([]);\r\n  // state = {\r\n  //   previewVisible: false,\r\n  //   previewImage: \"\",\r\n  //   fileList: [\r\n  //     {\r\n  //       uid: \"-1\",\r\n  //       name: \"image.png\",\r\n  //       status: \"done\",\r\n  //       url:\r\n  //         \"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\"\r\n  //     },\r\n  //     {\r\n  //       uid: \"-2\",\r\n  //       name: \"image.png\",\r\n  //       status: \"done\",\r\n  //       url:\r\n  //         \"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\"\r\n  //     },\r\n  //     {\r\n  //       uid: \"-3\",\r\n  //       name: \"image.png\",\r\n  //       status: \"done\",\r\n  //       url:\r\n  //         \"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\"\r\n  //     },\r\n  //     {\r\n  //       uid: \"-4\",\r\n  //       name: \"image.png\",\r\n  //       status: \"done\",\r\n  //       url:\r\n  //         \"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\"\r\n  //     },\r\n  //     {\r\n  //       uid: \"-5\",\r\n  //       name: \"image.png\",\r\n  //       status: \"error\"\r\n  //     }\r\n  //   ]\r\n  // };\r\n\r\n  function handleCancel()  {setPreviewVisible(false);}\r\n\r\n  const handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    setPreviewImage(file.url || file.preview);\r\n    setPreviewVisible(true);\r\n  };\r\n\r\n  const handleChange = ({ fileList }) => setFileList(fileList);\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      <PlusOutlined />\r\n      <div className=\"ant-upload-text\">Upload</div>\r\n    </div>\r\n  );\r\n  return (\r\n    <div className=\"clearfix\">\r\n      <Upload\r\n        action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n        listType=\"picture-card\"\r\n        fileList={fileList}\r\n        onPreview={handlePreview}\r\n        onChange={handleChange}\r\n      >\r\n        {fileList.length >= 8 ? null : uploadButton}\r\n      </Upload>\r\n      <Modal\r\n        visible={previewVisible}\r\n        footer={null}\r\n        onCancel={handleCancel}\r\n      >\r\n        <img alt=\"example\" style={{ width: \"100%\" }} src={previewImage} />\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PicturesWall","import { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { Button, Input, message, Upload } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport \"../App.css\";\r\nimport PicturesWall from \"./pictureWall\";\r\nconst { TextArea } = Input;\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener(\"load\", () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n  if (!isJpgOrPng) {\r\n    message.error(\"You can only upload JPG/PNG file!\");\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error(\"Image must smaller than 2MB!\");\r\n  }\r\n  return isJpgOrPng && isLt2M;\r\n}\r\n\r\nfunction Title(props) {\r\n  return (\r\n    <div className=\"titleWrap\">\r\n      <div className=\"delWrap\">\r\n        <h3>Mục {props.index}</h3>\r\n        <Button\r\n          type=\"danger\"\r\n          style={{ marginLeft: 16 }}\r\n          onClick={props.onDelete}\r\n        >\r\n          Xóa mục\r\n        </Button>\r\n      </div>\r\n      <br />\r\n      <Input placeholder=\"Đề mục\" allowClear onChange={() => {}} />\r\n      <br />\r\n      <TextArea placeholder=\"Nội dung\" allowClear onChange={() => {}} />\r\n      <br />\r\n      <Input placeholder=\"Quote nếu có\" allowClear onChange={() => {}} />\r\n      <br />\r\n      <Input placeholder=\"Link youtube nếu có\" allowClear onChange={() => {}} />\r\n      <br />\r\n      <h4>Hình cho mục này:</h4>\r\n      <PicturesWall />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PostItem() {\r\n  const [imageUrl, setImageURL] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [postTitle, setPostTitle] = useState(\"\");\r\n  const [coverURL, setCoverURL] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [sections, setSections] = useState([]);\r\n\r\n  function handleChange(info) {\r\n    if (info.file.status === \"uploading\") {\r\n      setLoading(true);\r\n      return;\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, imageUrl => {\r\n        setLoading(false);\r\n        setImageURL(imageUrl);\r\n      });\r\n    }\r\n  }\r\n\r\n  const addSection = () => {\r\n    setSections([\r\n      ...sections,\r\n      {\r\n        title: \"\",\r\n        content: \"\",\r\n        ytbURL: \"\",\r\n        pictureLinks: []\r\n      }\r\n    ]);\r\n  };\r\n\r\n  const deleteSection = index => {\r\n    sections.splice(index, 1);\r\n    sections.forEach((item, index) => (item.index = index + 1));\r\n    setSections([sections]);\r\n    console.log(sections);\r\n  };\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div className=\"ant-upload-text\">Upload</div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"btnWrap\">\r\n        <Button type=\"primary\">Thêm mới</Button>\r\n        <Button type=\"primary\" style={{ marginLeft: 16 }}>\r\n          Lưu\r\n        </Button>\r\n      </div>\r\n      <br />\r\n      <Input\r\n        placeholder=\"Tiêu đề\"\r\n        allowClear\r\n        onChange={text => setPostTitle(text)}\r\n      />\r\n      <br />\r\n      <br />\r\n      <Upload\r\n        name=\"avatar\"\r\n        listType=\"picture-card\"\r\n        className=\"avatar-uploader\"\r\n        showUploadList={true}\r\n        action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n        beforeUpload={beforeUpload}\r\n        onChange={handleChange}\r\n      >\r\n        {imageUrl ? (\r\n          <img src={imageUrl} alt=\"avatar\" style={{ width: \"100%\" }} />\r\n        ) : (\r\n          uploadButton\r\n        )}\r\n      </Upload>\r\n      <br />\r\n      <TextArea\r\n        placeholder=\"Mô tả\"\r\n        allowClear\r\n        onChange={text => setDescription(text)}\r\n      />\r\n      <br />\r\n      <br />\r\n      <Button type=\"primary\" onClick={addSection}>\r\n        Thêm mục\r\n      </Button>\r\n      <br />\r\n      {sections.map((item, index) => (\r\n        <div key={index}>\r\n          <br />\r\n          <Title index={index + 1} onDelete={() => deleteSection(index)} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostItem;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Card, Button } from \"antd\";\nimport PostItem from \"./component/postItem\";\nconst { Meta } = Card;\n\nconst data = [\n  {\n    title: \"AAAA\",\n    cover: \"https://nguoinoitieng.tv/images/nnt/96/0/bby1.jpg\",\n    description: \"BBBBBBBB fnkjskfjkjf ksnfknvkjr jnkncue\"\n  },\n  {\n    title: \"AAAA\",\n    cover: \"https://nguoinoitieng.tv/images/nnt/96/0/bby1.jpg\",\n    description: \"BBBBBBBB fnkjskfjkjf ksnfknvkjr jnkncue\"\n  },\n  {\n    title: \"AAAA\",\n    cover: \"https://nguoinoitieng.tv/images/nnt/96/0/bby1.jpg\",\n    description: \"BBBBBBBB fnkjskfjkjf ksnfknvkjr jnkncue\"\n  }\n];\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"leftHalf\">\n        {data.map((item, index) => (\n          <div key={index}>\n            <Card\n              style={{ width: \"100%\" }}\n              cover={\n                <img alt=\"example\" src={item.cover} width=\"100%\" height=\"150\" />\n              }\n            >\n              <Meta title={item.title} description={item.description} />\n            </Card>\n            <br />\n            <Button type=\"primary\" block>\n              Sửa\n            </Button>\n            <br />\n            <br />\n          </div>\n        ))}\n      </div>\n      <div className=\"rightHalf\">\n        <PostItem />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const firebaseConfig = {\r\n  apiKey: \"AIzaSyCIbYZAKvEmY9ns42xafyV54BFU6qUCmKI\",\r\n  authDomain: \"dau-giau.firebaseapp.com\",\r\n  databaseURL: \"https://dau-giau.firebaseio.com\",\r\n  projectId: \"dau-giau\",\r\n  storageBucket: \"dau-giau.appspot.com\",\r\n  messagingSenderId: \"801715659405\",\r\n  appId: \"1:801715659405:web:cb3eecc4840cd11abaf8c4\",\r\n  measurementId: \"G-XCRXMT5JYZ\"\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { firebaseConfig } from \"./firebaseConfig\";\nimport firebase from \"firebase\";\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}